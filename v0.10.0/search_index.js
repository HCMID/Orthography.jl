var documenterSearchIndex = {"docs":
[{"location":"guide/applications/#User's-guide:-applications","page":"User's guide: applications","title":"User's guide: applications","text":"","category":"section"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"CurrentModule = Orthography","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"Tokenizers can be applied to strings of text, to citable passges of text, or to citable corpora.","category":"page"},{"location":"guide/applications/#Token-histograms","page":"User's guide: applications","title":"Token histograms","text":"","category":"section"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"Tokenizers can be used to create histograms of token values. We count tokens in the first lines of the Mr. Ed theme song.","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"using Orthography\nusing CitableText, CitableCorpus\n\ncorpus = CitableTextCorpus([\n        CitableNode(CtsUrn(\"urn:cts:docstrings:mred.themesong:1\"),\"A horse is a horse, of course, of course,\"),\n        CitableNode(CtsUrn(\"urn:cts:docstrings:mred.themesong:1\"),\"And no one can talk to a horse of course,\"),\n        CitableNode(CtsUrn(\"urn:cts:docstrings:mred.themesong:1\"),\"That is, of course, unless the horse is the famous Mr. Ed.\"),\n])\nhisto_all = corpus_histo(simpleAscii(), corpus)\nhisto_all[\"course\"]\n\n# output\n\n4","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"There are lots of commas.","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"histo_all[\",\"]\n\n# output\n\n6","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"Optionally, you can include a token type to limit results.  If we consider only lexical tokens, we should get the same result for \"course\".","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"histo_lex = corpus_histo(simpleAscii(), corpus, LexicalToken())\nhisto_lex[\"course\"]\n\n# output\n\n4","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"But punctuation tokens will not be part of the histogram.","category":"page"},{"location":"guide/applications/","page":"User's guide: applications","title":"User's guide: applications","text":"julia> histo_lex[\",\"]\nERROR: KeyError: key \",\" not found\n[...]","category":"page"},{"location":"man/internals/#API-documentation:-internals","page":"API documentation: internals","title":"API documentation: internals","text":"","category":"section"},{"location":"man/internals/#Generic-utility-functions","page":"API documentation: internals","title":"Generic utility functions","text":"","category":"section"},{"location":"man/internals/","page":"API documentation: internals","title":"API documentation: internals","text":"Orthography.collecttail\nOrthography.trimtail","category":"page"},{"location":"man/internals/#Orthography.collecttail","page":"API documentation: internals","title":"Orthography.collecttail","text":"collecttail(s, arr)\ncollecttail(s, arr, stripped)\n\n\nRemove all trailing characters belong to list in arr, and collect them.  This is useful to collect punctuation from a token, for example.\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.trimtail","page":"API documentation: internals","title":"Orthography.trimtail","text":"Remove all trailing characters belong to list in arr, and and return the trimmed string.  \n\ntrimtail(s, arr)\n\n\nThis is useful to remove punctuation from a token, for example.\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Functions-supporting-the-SimpleAscii-implementation","page":"API documentation: internals","title":"Functions supporting the SimpleAscii implementation","text":"","category":"section"},{"location":"man/internals/","page":"API documentation: internals","title":"API documentation: internals","text":"Orthography.basicTypes\nOrthography.asciiTokenizer\nOrthography.splitAsciiPunctuation\nOrthography.asciialphabetic\nOrthography.asciinumeric\nOrthography.asciipunctuation\nOrthography.asciiCPs\nOrthography.asciitokenforstring","category":"page"},{"location":"man/internals/#Orthography.basicTypes","page":"API documentation: internals","title":"Orthography.basicTypes","text":"Define an Array with all valid TokenCategorysystems in the SimpleAscii orthography.\n\nbasicTypes()\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciiTokenizer","page":"API documentation: internals","title":"Orthography.asciiTokenizer","text":"Tokenize a string in SimpleAscii orthography.\n\nasciiTokenizer(s)\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.splitAsciiPunctuation","page":"API documentation: internals","title":"Orthography.splitAsciiPunctuation","text":"Split off any trailing punctuation and return an Array of leading strim + trailing punctuation.\n\nsplitAsciiPunctuation(s)\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciialphabetic","page":"API documentation: internals","title":"Orthography.asciialphabetic","text":"Compose list of alphabetic characters in SimpleAscii.\n\nasciialphabetic()\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciinumeric","page":"API documentation: internals","title":"Orthography.asciinumeric","text":"Compose list of numeric characters in SimpleAscii.\n\nasciinumeric()\n\n\nAllow notation of positive or negative decimals.\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciipunctuation","page":"API documentation: internals","title":"Orthography.asciipunctuation","text":"Compose list of punctuation characters in SimpleAscii.\n\nasciipunctuation()\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciiCPs","page":"API documentation: internals","title":"Orthography.asciiCPs","text":"Define a string including all valid code points in the SimpleAscii orthography.\n\nasciiCPs()\n\n\n\n\n\n\n","category":"function"},{"location":"man/internals/#Orthography.asciitokenforstring","page":"API documentation: internals","title":"Orthography.asciitokenforstring","text":"Construct an OrthographicToken from a string.\n\nasciitokenforstring(s)\n\n\ns is a string representing a single token in the SimpleAscii orthography.\n\n\n\n\n\n","category":"function"},{"location":"guide/guide/#User's-guide:-a-simple-example","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"CurrentModule = Orthography\nDocTestSetup = quote\n    using Orthography\nend","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"Subtypes of an OrthographicSystem must implement five functions:","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"codepoints: returns a complete list of codepoints allowed in this orthography\ntokentypes: returns a complete list of the types of tokens that can be recognized in this orthography.  These are subtypes of TokenCategory.\nvalidchar(c): true if c is a valid character in this orthography.  c is a string value representing a single character in this orthography. It may be longer than one Julia Char.\nvalidstring(s): true if s is a valid string in this orthography\ntokenize(orthography,s): use orthography to tokenize s.","category":"page"},{"location":"guide/guide/#Example:-SimpleAscii","page":"User's guide: a simple example","title":"Example: SimpleAscii","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"The SimpleAscii orthography implements these functions for a basic alphabetic subset of the ASCII character set. The simpleAscii function creates a SimpleAscii orthography for you.","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"warning: Warning\nSimpleAscii is meant only to demonstrate the functionality of an orthographic system.  Its definition of numeric tokens is naive and not suitable for real-world use.","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"using Orthography\northography = simpleAscii()\ntypeof(orthography)\n\n# output\n\nSimpleAscii","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"typeof(orthography) |> supertype\n\n# output\n\nOrthographicSystem","category":"page"},{"location":"guide/guide/#Enumerating-codepoints-and-tokens","page":"User's guide: a simple example","title":"Enumerating codepoints and tokens","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"codepoints(orthography)\n\n# output\n\n\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,-:;!?'\\\"()[]\"","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"tokentypes(orthography)\n\n# output\n\n3-element Array{TokenCategory,1}:\n LexicalToken()\n NumericToken()\n PunctuationToken()","category":"page"},{"location":"guide/guide/#Testing-valid-strings","page":"User's guide: a simple example","title":"Testing valid strings","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"validstring(orthography, \"OK!\")\n\n# output\n\ntrue","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"cam = \"Thë ōnly thîng bëttër than havîng a qualîty cîgar... îs havîng gōōd cōnvërsatîon tō accōmpany ît wîth\"\nvalidstring(orthography, cam)\n\n# output\n\nfalse","category":"page"},{"location":"guide/guide/#Tokenizing-strings","page":"User's guide: a simple example","title":"Tokenizing strings","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"s = \"The 3 stooges, Larry, Curly and Moe.\"\ntokens = tokenize(orthography, s)\ntokens[1].tokencategory\n\n# output\n\nLexicalToken()","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"tokens[2].tokencategory\n\n# output\n\nNumericToken()","category":"page"},{"location":"guide/guide/","page":"User's guide: a simple example","title":"User's guide: a simple example","text":"tokens[end].tokencategory\n\n# output\n\nPunctuationToken()","category":"page"},{"location":"#Orthography","page":"Overview","title":"Orthography","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The Orthography package supports working with rigorously defined scholarly editions of digital texts adhering to a specified orthography.  ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"An orthography: ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"explicitly defines a set of token types\nexplicitly defines a character set or set of code points that can compose tokens\nuses semantics of the character set to parse text into sequences of tokens with associated token type","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This tokenizing functionality can be applied to strings of text, citable text passages, or entire citable corpora.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Orthography.jl was originally developed to support projects at the Holy Cross Manuscripts, Inscriptions and Documents Club (MID).","category":"page"},{"location":"#Contents","page":"Overview","title":"Contents","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Pages = [\n    \"guide/guide.md\",\n    \"man/index.md\"\n]","category":"page"},{"location":"man/#API-documentation:-exported-types-and-functions","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"","category":"section"},{"location":"man/#Types","page":"API documentation: exported types and functions","title":"Types","text":"","category":"section"},{"location":"man/","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"OrthographicSystem\nTokenCategory\nLexicalToken\nNumericToken\nPunctuationToken","category":"page"},{"location":"man/#Orthography.OrthographicSystem","page":"API documentation: exported types and functions","title":"Orthography.OrthographicSystem","text":"An abstract type for orthographic systems.\n\n\n\n\n\n","category":"type"},{"location":"man/#Orthography.TokenCategory","page":"API documentation: exported types and functions","title":"Orthography.TokenCategory","text":"An abstract type for token categories.\n\n\n\n\n\n","category":"type"},{"location":"man/#Orthography.LexicalToken","page":"API documentation: exported types and functions","title":"Orthography.LexicalToken","text":"Category of alphabetic tokens.\n\n\n\n\n\n","category":"type"},{"location":"man/#Orthography.NumericToken","page":"API documentation: exported types and functions","title":"Orthography.NumericToken","text":"Category of numeric tokens.\n\n\n\n\n\n","category":"type"},{"location":"man/#Orthography.PunctuationToken","page":"API documentation: exported types and functions","title":"Orthography.PunctuationToken","text":"Category of punctuation tokens.\n\n\n\n\n\n","category":"type"},{"location":"man/#Functions","page":"API documentation: exported types and functions","title":"Functions","text":"","category":"section"},{"location":"man/","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"Public functions implemented for all subtypes of OrthographicSystem.","category":"page"},{"location":"man/","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"codepoints\ntokentypes\nvalidchar\nvalidstring\ntokenize","category":"page"},{"location":"man/#Orthography.codepoints","page":"API documentation: exported types and functions","title":"Orthography.codepoints","text":"Generic function to retrieve list of codepoints for an OrthographicSystem.\n\ncodepoints(ortho)\n\n\n\n\n\n\nImplement codepoints function for SimpleAscii.\n\ncodepoints(ortho)\n\n\n\n\n\n\n","category":"function"},{"location":"man/#Orthography.tokentypes","page":"API documentation: exported types and functions","title":"Orthography.tokentypes","text":"Generic function to retrieve a list of tokentypes for an OrthographicSystem.\n\n\n\n\n\nImplement tokentypes function for SimpleAscii.\n\ntokentypes(ortho)\n\n\n\n\n\n\n","category":"function"},{"location":"man/#Orthography.validchar","page":"API documentation: exported types and functions","title":"Orthography.validchar","text":"True if ch appears in list of all valid characters for this orthography.\n\nvalidchar(ortho, ch)\n\n\nch is a string possibly including more than one Julia Char but representing  a single character in the orthographic system ortho.\n\n\n\n\n\n","category":"function"},{"location":"man/#Orthography.validstring","page":"API documentation: exported types and functions","title":"Orthography.validstring","text":"True if all chars in s are valid.\n\nvalidstring(ortho, s)\n\n\n\n\n\n\n","category":"function"},{"location":"man/#Orthography.tokenize","page":"API documentation: exported types and functions","title":"Orthography.tokenize","text":"Tokenize string s using the tokenizer of the given orthographic system.\n\nThe return value is a list of OrthographicTokens.\n\n\n\n\n\nTokenize citable node cn using the tokenizer of the given orthographic system.\n\ntokenize(ortho, cn)\n\n\nThe return value is a list of pairings of a CitableNode and a token category.  The citable node is citable at the level of the token.\n\n\n\n\n\nTokenize corpus c using the tokenizer of the given orthographic system.\n\ntokenize(ortho, c)\n\n\nThe return value is a list of pairings of a CitableNode and a token category.  The citable node is citable at the level of the token.\n\n\n\n\n\n","category":"function"},{"location":"man/#Utilities","page":"API documentation: exported types and functions","title":"Utilities","text":"","category":"section"},{"location":"man/","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"corpus_histo\nnfkc","category":"page"},{"location":"man/#Orthography.corpus_histo","page":"API documentation: exported types and functions","title":"Orthography.corpus_histo","text":"Create an ordered dictionary of text values for tokens in corpus c. Optionally, filter the results to include only tokens of a specified type.\n\ncorpus_histo(ortho, c)\ncorpus_histo(ortho, c, tokenType)\n\n\n\n\n\n\n","category":"function"},{"location":"man/#Orthography.nfkc","page":"API documentation: exported types and functions","title":"Orthography.nfkc","text":"Shorthand function to normalize string s to Unicode form NFKC.\n\nnfkc(s)\n\n\n\n\n\n\n","category":"function"},{"location":"man/#Example-implementation","page":"API documentation: exported types and functions","title":"Example implementation","text":"","category":"section"},{"location":"man/","page":"API documentation: exported types and functions","title":"API documentation: exported types and functions","text":"SimpleAscii\nsimpleAscii","category":"page"},{"location":"man/#Orthography.SimpleAscii","page":"API documentation: exported types and functions","title":"Orthography.SimpleAscii","text":"An orthographic system for a basic alphabetic subset of the ASCII characater set.\n\n\n\n\n\n","category":"type"},{"location":"man/#Orthography.simpleAscii","page":"API documentation: exported types and functions","title":"Orthography.simpleAscii","text":"Construct a SimpleAscii with correct member values.\n\nsimpleAscii()\n\n\n\n\n\n\n","category":"function"}]
}
